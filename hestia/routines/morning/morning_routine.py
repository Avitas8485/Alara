from hestia.tools.reports.news_report import NewsReport
from hestia.tools.reports.weather_report import WeatherReport
from hestia.text_to_speech.tts_utils import play_audio
from datetime import datetime
import os
from hestia.tools.system_and_utility.scheduler import SchedulerManager
from hestia.lib.hestia_logger import logger
from hestia.tools.system_and_utility.alarm import Alarm
from hestia.tools.reports.schedule_report import ScheduleReport
import time




scheduler = SchedulerManager()

def generate_report(report_class):
    """Generate a report.
    Args:
        report_class: The class of the report to generate.
        """
    try:
        report = report_class()
        report.parse_information()
        report.generate_report_summary()
        report.convert_summary_to_audio()
    except Exception as e:
        logger.error(f"Error generating report: {e}")
        
def play_report(report_type):
    """Play a report.
    Args:
        report_type: The type of report to play."""
    todays_date = datetime.now().strftime("%b %d, %Y")
    report_path = f"hestia/text_to_speech/outputs/{report_type}/{todays_date}{report_type}.wav"
    play_audio(report_path)

def news_report():
    """Generate a news report."""
    generate_report(NewsReport)
    
def weather_report():
    """Generate a weather report."""
    generate_report(WeatherReport)

def schedule_report():
    """Generate a schedule report."""
    generate_report(ScheduleReport)

def morning_preparation():
    """Prepare for the morning routine."""
    news_report()
    weather_report()
    schedule_report()

    

def play_weather():
    """Play the weather report."""
    logger.info("Playing weather report...")
    play_report("weather_report")
def play_news_details():
    """Play the news report."""
    logger.info("Playing news report...")
    play_report("news_report")
    
def play_schedule():
    """Play the schedule report."""
    logger.info("Playing schedule report...")
    play_report("schedule_report")
    

def morning_presentation():
    """Play the morning presentation."""
    logger.info("Starting morning presentation...")
    alarm = Alarm()
    alarm.start()
    while alarm.is_active():
        time.sleep(1)
    time.sleep(5)
    play_weather()
    time.sleep(5)
    play_news_details()
    time.sleep(5)
    play_schedule()
    logger.info("Morning presentation complete. Cleaning up...")
    cleanup()
    

    
def cleanup():
    """Clean up the files generated by the morning routine."""
    logger.info("Cleaning up...")
    for file in os.listdir("hestia/text_to_speech/outputs"):
        if file.endswith(".wav"):
            os.remove(f"hestia/text_to_speech/outputs/{file}")
    for file in os.listdir("hestia/tools/reports/news"):
        if file.endswith(".txt"):
            os.remove(f"hestia/tools/reports/news/{file}")
    for file in os.listdir("hestia/tools/reports/weather"):
        if file.endswith(".txt"):
            os.remove(f"hestia/tools/reports/weather/{file}")
    logger.info("Cleanup complete.")
    for file in os.listdir("hestia/tools/reports/schedule"):
        if file.endswith(".txt"):
            os.remove(f"hestia/tools/reports/schedule/{file}")
        
    


    
    