import os
import time
from datetime import datetime

from hestia.lib.hestia_logger import logger
from hestia.llm.llama_chat_completion import load_prompt, chat_completion
from hestia.text_to_speech.speech import TextToSpeechSystem
from hestia.text_to_speech.tts_utils import play_audio
from hestia.tools.random_scripts.advice import get_advice
from hestia.tools.reports.news_report import NewsReport
from hestia.tools.reports.weather_report import WeatherReport
from hestia.tools.system_and_utility.Alarm.alarm import Alarm
from hestia.tools.system_and_utility.scheduler import SchedulerManager
from hestia.config.config import cfg
scheduler = SchedulerManager()

# add some global variables


        



def morning_greeting():
    today = datetime.now().strftime("%b %d, %Y")
    logger.info(f"Generating morning greeting for {today}...")
    with open(f"{cfg.REPORT_SUMMARY_PATH}/news_summary {today}.txt", "r") as file:
        news = file.read()
    with open(f"{cfg.REPORT_SUMMARY_PATH}/weather_summary {today}.txt", "r") as file:
        weather = file.read()
    prompt = load_prompt("morning_greeting")
    
    greeting = chat_completion(
        system_prompt=prompt,
        user_prompt=f"""Today's information:
        Day of the week:{datetime.now().strftime("%A")}\
        Time is: {datetime.now().strftime("%I:%M %p")}
        Date: {today},
        Newss:\n{news}\n,
        weather:\n{weather}\n,
        Advice of the day:\n{get_advice()}\n
        """
    )
    tts = TextToSpeechSystem()
    tts.convert_text_to_speech(greeting,
                               output_dir=f"{cfg.XTTS_OUTPUT_PATH}/morning_greeting",
                               output_filename=f"{today}morning_greeting")


def play_report(report_type):
    """Play a report."""
    todays_date = datetime.now().strftime("%b %d, %Y")
    report_path = f"{cfg.TTS_PATH}/{report_type}/{todays_date}{report_type}.wav"
    play_audio(report_path)


def morning_preparation():
    """Prepare for the morning routine."""
    logger.info("Preparing for morning routine...")
    news_report = NewsReport()
    weather_report = WeatherReport()
    news_report.generate_report_summary()
    weather_report.generate_report_summary()
    logger.info("Morning preparation complete.")
    morning_greeting()
    


def play_morning_greeting():
    """Play the morning greeting."""
    todays_date = datetime.now().strftime("%b %d, %Y")
    greeting_path = f"{cfg.XTTS_OUTPUT_PATH}/morning_greeting/{todays_date}morning_greeting.wav"
    play_audio(greeting_path)


def morning_presentation():
    """Play the morning presentation."""
    logger.info("Starting morning presentation...")
    alarm = Alarm()
    alarm.start()
    while alarm.is_active():
        time.sleep(1)
    time.sleep(5)
    play_morning_greeting()
    logger.info("Morning presentation complete. Cleaning up...")
    cleanup()


def cleanup():
    """Clean up the files generated by the morning routine."""
    logger.info("Cleaning up...")

    cleanup_paths = [
        ("hestia/text_to_speech/outputs", ".wav"),
        ("hestia/tools/reports/summary", ".txt")
    ]

    for path, file_type in cleanup_paths:
        for file in os.listdir(path):
            if file.endswith(file_type):
                os.remove(f"{path}/{file}")

    logger.info("Cleanup complete.")